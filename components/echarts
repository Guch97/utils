<template>
  <!--有收缩区域的柱状图-->
  <div :class="className" :style="{height:'260px',width:width}" />
</template>

<script>
const echarts = require('echarts/lib/echarts')
require('echarts/lib/chart/bar')
require('echarts/lib/component/legend')
require('echarts/lib/component/tooltip')
require('echarts/lib/component/dataZoom')
require('echarts/lib/component/markPoint')
import { debounce } from '@/utils' // 防抖动

const animationDuration = 3000 // 图表加载完成时间

function fontSize(res) {
  res === undefined ? 1 : res
  const clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth
  if (!clientWidth) return
  const fontSize = 100 * (clientWidth / 1920)
  return res * fontSize
}

export default {
  props: {
    className: {
      type: String,
      default: 'chart'
    },
    width: {
      type: String,
      default: '90%'
    },
    height: {
      type: String,
      default: '300px'
    },
    chartData: {
      type: Object,
      required: true
    }
  },
  data() {
    return {
      chart: null
    }
  },
  watch: {
    chartData: {
      deep: true,
      handler(val) {
        this.setOptions(val)
      }
    }
  },
  mounted() {
    this.initChart()
    this.__resizeHandler = debounce(() => {
      if (this.chart) {
        this.chart.resize()
      }
    }, 100)
    window.addEventListener('resize', this.__resizeHandler)
  },
  beforeDestroy() {
    if (!this.chart) {
      return
    }
    window.removeEventListener('resize', this.__resizeHandler)
    this.chart.dispose()
    this.chart = null
  },
  methods: {
    setOptions({ xName, dataName, barDatas } = {}) {
      console.log(barDatas)
      console.log(xName)
      this.chart.setOption({
        title: {
        subtext: ''
     },
      grid: {
        left: '3%',
        right: '8%',
        bottom: '18%',
        containLabel: true
    },
        xAxis: {
            type: 'category',
            data: xName,
            textStyle: {
            fontSize: fontSize(0.14)
          }
        },
        yAxis: {
            name: '(吨)',
            type: 'value'
        },
        series: [{
            name: '收料量',
            data: barDatas,
            type: 'line',
              label: {
                normal: {
                    show: true,
                    position: 'top'
                }
            },
        }],
        legend: {
        show: true,
        data: ['收料量']
        }  
      })
    },
    initChart() {
      this.chart = echarts.init(this.$el)
      this.setOptions(this.chartData)
    }
  }
}
</script>
